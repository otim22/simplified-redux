{"version":3,"sources":["js/constants/action-types.js","js/reducers/index.js","js/middleware/index.js","js/sagas/api-saga.js","js/store/index.js","js/components/List.js","js/components/Form.js","js/actions/index.js","js/components/Posts.js","js/components/App.js","index.js"],"names":["ADD_ARTICLE","DATA_LOADED","DATA_REQUESTED","API_ERRORED","FOUND_BAD_WORD","initialState","articles","remoteArticles","rootReducer","state","arguments","length","undefined","action","type","Object","assign","concat","payload","forbiddenWords","watcherSaga","workerSaga","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","_context2","call","getData","sent","put","t0","_marked2","fetch","then","response","json","initialiseSagaMiddleware","createSagaMiddleware","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","_ref","dispatch","filter","word","title","includes","run","apiSaga","List","connect","react_default","createElement","className","map","article","key","id","ConnectedForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","defineProperty","target","value","preventDefault","uuidv1","props","addArticle","onSubmit","htmlFor","onChange","Component","Form","Post","_Component","apply","inherits","createClass","Fragment","el","slice","App","components_List","components_Form","Posts","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.61ed8029.chunk.js","sourcesContent":["export const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const DATA_LOADED = \"DATA_LOADED\";\nexport const DATA_REQUESTED = \"DATA_REQUESTED\";\nexport const API_ERRORED = \"API_ERRORED\";\nexport const FOUND_BAD_WORD = \"FOUND_BAD_WORD\";","import { ADD_ARTICLE } from \"../constants/action-types\";\nimport { DATA_LOADED } from \"../constants/action-types\";\n// import { FOUND_BAD_WORD } from \"../constants/action-types\";\n\nconst initialState = {\n    articles: [],\n    remoteArticles: []\n};\n\nfunction rootReducer(state = initialState, action) {\n    switch(action.type){\n        case ADD_ARTICLE:\n            return Object.assign({}, state, {\n                articles: state.articles.concat(action.payload)\n            });\n\n        case DATA_LOADED:\n            return Object.assign({}, state, {\n                remoteArticles: state.remoteArticles.concat(action.payload)\n            });\n\n        // case FOUND_BAD_WORD:\n        //     return Object.assign({}, state, {\n        //         articles: state.articles.concat(action.payload)\n        //     });\n\n        default:\n            return state\n    }\n}\n\nexport default rootReducer;","import { ADD_ARTICLE } from \"../constants/action-types\";\nimport { FOUND_BAD_WORD } from \"../constants/action-types\";\n\nconst forbiddenWords = [\"spam\", \"money\"];\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n    return function(next) {\n        return function(action) {\n            // do your stuff\n            if (action.type === ADD_ARTICLE) {\n            \n                const foundWord = forbiddenWords.filter(word =>\n                    action.payload.title.includes(word)\n                );\n                \n                if (foundWord.length) {\n                    return dispatch({ type: FOUND_BAD_WORD });\n                }\n            }\n            return next(action);\n        };\n    };\n}","import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { DATA_LOADED } from \"../constants/action-types\";\nimport { DATA_REQUESTED } from \"../constants/action-types\";\nimport { API_ERRORED } from \"../constants/action-types\";\n\nexport default function* watcherSaga() {\n  yield takeEvery(DATA_REQUESTED, workerSaga);\n}\n\n// Pro tip - put same as dispatch in redux saga\nfunction* workerSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put({ type: DATA_LOADED, payload });\n  } catch (e) {\n    yield put({ type: API_ERRORED, payload: e });\n  }\n}\n\nfunction getData() {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then(response =>\n            response.json()\n        );\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport { forbiddenWordsMiddleware } from \"../middleware\";\n// import thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport apiSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    storeEnhancers(applyMiddleware(forbiddenWordsMiddleware, initialiseSagaMiddleware))\n);\n\ninitialiseSagaMiddleware.run(apiSaga);\n\nexport default store;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = state => {\n  return { articles: state.articles };\n};\n\nconst ConnectedList = ({ articles }) => (\n  <ul className=\"list-group list-group-flush\">\n    {articles.length > 0 ? ( \n      articles.map(article => (\n      <li className=\"list-group-item\" key={article.id}>\n        {article.title}\n      </li>\n    ))\n    ) : (\n      <li className=\"list-group-item\">\n        <p>No articles available</p>\n      </li>\n    ) }\n  </ul>\n);\n\nConnectedList.propTypes = {\n    articles: PropTypes.array.isRequired\n};\n\nconst List = connect(mapStateToProps)(ConnectedList);\n\nexport default List;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport uuidv1 from \"uuid\";\nimport { addArticle } from \"../actions/index\";\nimport PropTypes from 'prop-types';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addArticle: article => dispatch(addArticle(article))\n    };\n}\n\nclass ConnectedForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n        title: \"\"\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        \n        const { title } = this.state;\n        const id = uuidv1();\n\n        this.props.addArticle({ title, id });\n        this.setState({ title: \"\" });\n    }\n\n    render() {\n        const { title } = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-success btn-lg\">\n                    SAVE\n                </button>\n            </form>\n        );\n    }\n}\n\nConnectedForm.propTypes = {\n    addArticle: PropTypes.func.isRequired\n};\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;","import { ADD_ARTICLE } from \"../constants/action-types\";\n// import { DATA_LOADED } from \"../constants/action-types\";\nimport { DATA_REQUESTED } from \"../constants/action-types\";\nimport { FOUND_BAD_WORD } from \"../constants/action-types\";\n\nexport function addArticle(payload) {\n    return { \n        type: ADD_ARTICLE, \n        payload \n    }\n};\n\nexport function foundBadWord(payload) {\n    return { \n        type: FOUND_BAD_WORD, \n        payload \n    }\n};\n\n// Uses redux-thunk\n/* \nexport function getData() {\n    return function(dispatch) {\n      return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then(response => response.json())\n            .then(json => {\n                dispatch({ type: DATA_LOADED, payload: json });\n            });\n    };\n} \n*/\n\n// Uses redux saga and Redux sage can be a single file containing \n// watcher function, worker function\nexport function getData() {\n    return { type: DATA_REQUESTED };\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getData } from \"../actions/index\";\n\nexport class Post extends Component {\n    // constructor() {\n    //     super();\n    // }\n\n    componentDidMount() {\n        // calling the new action creator\n        this.props.getData();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul className=\"list-group list-group-flush\">\n                    {this.props.articles.map(el => (\n                        <li className=\"list-group-item\" key={el.id}>\n                            {el.title}\n                        </li>\n                    ))}\n                </ul>\n            </React.Fragment>\n        );\n      }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        articles: state.remoteArticles.slice(0, 10)\n    };\n}\n\n//  { getData } is the object shorthand form for mapDispatchToProps\nexport default connect(mapStateToProps, { getData })(Post);","import React from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Post from \"./Posts\";\n\nconst App = () => (\n    <div className=\"container\">\n        <div className=\"col-md-12\">\n            <h1>Write an article, Today!! </h1>\n        </div>\n\n        <div className=\"row mt-5\">\n            <div className=\"col-md-4 offset-md-1\">\n                <h2>Articles</h2>\n                <List />\n            </div>\n            <div className=\"col-md-4 offset-md-1\">\n                <h2>Add a new article</h2>\n                <Form />\n            </div>\n            <div className=\"col-md-4 offset-md-1\">\n                <h2>API posts</h2>\n                <Post />\n            </div>\n        </div>\n    </div>\n        \n    \n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport App from './js/components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}